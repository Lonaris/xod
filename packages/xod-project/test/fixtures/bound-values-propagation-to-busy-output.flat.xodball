{
  "patches": {
    "xod/common-hardware/led": {
      "description": "Controla un LED regulable genérico de un solo color. La conversión entre luminancia y potencia del LED está sesgada de modo que el cambio de brillo en el rango 0… 1 sea percibido de manera más o menos uniforme por un ser humano.",
      "links": {
        "Hk64xTn8-": {
          "id": "Hk64xTn8-",
          "input": {
            "nodeId": "SyqVe6hLb",
            "pinKey": "ByZ7_hnUb"
          },
          "output": {
            "nodeId": "HyYh1a3LZ",
            "pinKey": "__out__"
          }
        },
        "Sk0NgTnUW": {
          "id": "Sk0NgTnUW",
          "input": {
            "nodeId": "H114eThI-",
            "pinKey": "ByXnYHPyb"
          },
          "output": {
            "nodeId": "SyqVe6hLb",
            "pinKey": "B1QQ_nhUb"
          }
        },
        "rk4NeanI-": {
          "id": "rk4NeanI-",
          "input": {
            "nodeId": "H114eThI-",
            "pinKey": "rJsaFSvk-"
          },
          "output": {
            "nodeId": "B1oqkTnIb",
            "pinKey": "__out__"
          }
        }
      },
      "nodes": {
        "B1oqkTnIb": {
          "description": "Número de puerto de la placa al que está conectado el LED. El puerto debe poder generar una señal PWM.",
          "label": "PORT",
          "id": "B1oqkTnIb",
          "position": {
            "x": 10,
            "y": 16
          },
          "type": "xod/patch-nodes/input-number"
        },
        "H114eThI-": {
          "id": "H114eThI-",
          "position": {
            "x": 10,
            "y": 224
          },
          "type": "xod/core/pwm-output"
        },
        "HyYh1a3LZ": {
          "description": "Valor de luminancia (brillo) en unidades relativas [0.0, 1.0].",
          "label": "LUM",
          "id": "HyYh1a3LZ",
          "position": {
            "x": 138,
            "y": 16
          },
          "type": "xod/patch-nodes/input-number"
        },
        "SyqVe6hLb": {
          "id": "SyqVe6hLb",
          "position": {
            "x": 138,
            "y": 120
          },
          "type": "xod/core/cube"
        }
      },
      "path": "xod/common-hardware/led"
    },
    "xod/core/pwm-output": {
      "attachments": [
        {
          "filename": "patch.cpp",
          "encoding": "utf8",
          "content": "struct State {\n    int configuredPort = -1;\n};\n\n{{ GENERATED_CODE }}\n\nvoid evaluate(Context ctx) {\n    State* state = getState(ctx);\n    const int port = (int)getValue<input_PORT>(ctx);\n    if (port != state->configuredPort) {\n        ::pinMode(port, OUTPUT);\n        // Store configured port so to avoid repeating `pinMode` call if just\n        // SIG is updated\n        state->configuredPort = port;\n    }\n\n    auto duty = getValue<input_DUTY>(ctx);\n    duty = duty > 1 ? 1 : (duty < 0 ? 0 : duty);\n\n    uint8_t val = (uint8_t)(duty * 255.0);\n    ::analogWrite(port, val);\n}\n"
        }
      ],
      "description": "Emite una señal PWM compatible con hardware en un puerto de la placa",
      "nodes": {
        "ByXnYHPyb": {
          "description": "Valor del ciclo de trabajo en rango 0.0 … 1.0",
          "label": "DUTY",
          "id": "ByXnYHPyb",
          "position": {
            "x": 138,
            "y": 16
          },
          "type": "xod/patch-nodes/input-number"
        },
        "noNativeImpl": {
          "id": "noNativeImpl",
          "position": {
            "x": 100,
            "y": 100
          },
          "type": "xod/patch-nodes/not-implemented-in-xod"
        },
        "rJsaFSvk-": {
          "description": "Puerto PWM de placa para escribir",
          "label": "PORT",
          "id": "rJsaFSvk-",
          "position": {
            "x": 10,
            "y": 16
          },
          "type": "xod/patch-nodes/input-number"
        }
      },
      "path": "xod/core/pwm-output"
    },
    "xod/core/cube": {
      "attachments": [
        {
          "filename": "patch.cpp",
          "encoding": "utf8",
          "content": "struct State {\n};\n\n{{ GENERATED_CODE }}\n\nvoid evaluate(Context ctx) {\n    Number x = getValue<input_IN>(ctx);\n    emitValue<output_OUT>(ctx, x * x * x);\n}\n"
        }
      ],
      "description": "Calcula el cubo (es decir, x³) de un valor de entrada.",
      "nodes": {
        "B1QQ_nhUb": {
          "id": "B1QQ_nhUb",
          "position": {
            "x": 10,
            "y": 328
          },
          "type": "xod/patch-nodes/output-number"
        },
        "BkRma33U-": {
          "id": "BkRma33U-",
          "position": {
            "x": 10,
            "y": 120
          },
          "type": "xod/patch-nodes/not-implemented-in-xod"
        },
        "ByZ7_hnUb": {
          "id": "ByZ7_hnUb",
          "position": {
            "x": 10,
            "y": 16
          },
          "type": "xod/patch-nodes/input-number"
        }
      },
      "path": "xod/core/cube"
    },
    "xod/core/constant-number": {
      "attachments": [
        {
          "filename": "patch.cpp",
          "encoding": "utf8",
          "content": "struct State {};\n\n{{ GENERATED_CODE }}\n\nvoid evaluate(Context ctx) {\n}\n"
        }
      ],
      "nodes": {
        "B1x2RV3eZ": {
          "label": "VAL",
          "id": "B1x2RV3eZ",
          "position": {
            "x": 10,
            "y": 120
          },
          "type": "xod/patch-nodes/output-number"
        },
        "H1PnRN2lW": {
          "id": "H1PnRN2lW",
          "position": {
            "x": 10,
            "y": 16
          },
          "type": "xod/patch-nodes/not-implemented-in-xod"
        }
      },
      "path": "xod/core/constant-number"
    },
    "@/main": {
      "nodes": {
        "BkDHHm3JG~S1XVBXhyf~H114eThI-": {
          "id": "BkDHHm3JG~S1XVBXhyf~H114eThI-",
          "position": {
            "x": 10,
            "y": 224
          },
          "type": "xod/core/pwm-output"
        },
        "BkDHHm3JG~S1XVBXhyf~SyqVe6hLb": {
          "id": "BkDHHm3JG~S1XVBXhyf~SyqVe6hLb",
          "position": {
            "x": 138,
            "y": 120
          },
          "type": "xod/core/cube"
        },
        "H1iBrm2Jf": {
          "boundLiterals": {
            "B1x2RV3eZ": 11
          },
          "id": "H1iBrm2Jf",
          "type": "xod/core/constant-number",
          "position": {
            "x": 102,
            "y": 102
          }
        }
      },
      "links": {
        "BkDHHm3JG~S1XVBXhyf~rk4NeanI-": {
          "id": "BkDHHm3JG~S1XVBXhyf~rk4NeanI-",
          "output": {
            "nodeId": "H1iBrm2Jf",
            "pinKey": "B1x2RV3eZ"
          },
          "input": {
            "nodeId": "BkDHHm3JG~S1XVBXhyf~H114eThI-",
            "pinKey": "rJsaFSvk-"
          }
        },
        "BkDHHm3JG~S1XVBXhyf~Sk0NgTnUW": {
          "id": "BkDHHm3JG~S1XVBXhyf~Sk0NgTnUW",
          "output": {
            "nodeId": "BkDHHm3JG~S1XVBXhyf~SyqVe6hLb",
            "pinKey": "B1QQ_nhUb"
          },
          "input": {
            "nodeId": "BkDHHm3JG~S1XVBXhyf~H114eThI-",
            "pinKey": "ByXnYHPyb"
          }
        }
      },
      "path": "@/main"
    },
    "@/wrapped-led": {
      "links": {
        "r1I4HXhJz": {
          "id": "r1I4HXhJz",
          "output": {
            "nodeId": "ry6-B73yf",
            "pinKey": "__out__"
          },
          "input": {
            "nodeId": "S1XVBXhyf",
            "pinKey": "B1oqkTnIb"
          }
        }
      },
      "nodes": {
        "ry6-B73yf": {
          "boundLiterals": {
            "__out__": 13
          },
          "label": "PORT",
          "id": "ry6-B73yf",
          "type": "xod/patch-nodes/input-number",
          "position": {
            "x": 102,
            "y": 0
          }
        },
        "S1XVBXhyf": {
          "id": "S1XVBXhyf",
          "type": "xod/common-hardware/led",
          "position": {
            "x": 102,
            "y": 102
          }
        }
      },
      "comments": {
        "BkU2BQn1M": {
          "id": "BkU2BQn1M",
          "position": {
            "x": 170,
            "y": 0
          },
          "size": {
            "width": 238,
            "height": 51
          },
          "content": "<- default value is bound here"
        }
      },
      "path": "@/wrapped-led"
    }
  },
  "authors": [
    "xod"
  ],
  "license": "MIT",
  "version": "0.14.0",
  "name": "constant-regression"
}
